name: release

on:
  push:
    branches: [ "main" ]


env:
  CONTAINER_NAME: souvenir-telegram-bot


jobs:
  build-and-push-image:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Login in to Docker Hub
        uses: docker/login-action@v3.1.0
        with: 
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}


      - name: Build and push Docker images
        uses: docker/build-push-action@v5.3.0
        env: 
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
        with: 
          context: .
          push: true
          tags: ${{ vars.DOCKER_TAG }}

  deploy-via-ssh:
    needs: build-and-push-image
    name: deploy image
    runs-on: ubuntu-latest

    # steps:
    #   - name: Check out the repository
    #     uses: actions/checkout@v4

    #   - name: Install ssh keys
    #     run: |
    #         install -m 600 -D /dev/null ~/.ssh/id_rsa
    #         echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
    #         ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts

    #   - name: Connect and pull
    #     run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.WORK_DIR }} && docker compose pull && docker compose up -d && exit"

    #   - name: cleanup
    #     run: rm -rf ~/.ssh



    steps:
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          script: |
            cd ${{ secrets.WORK_DIR }};
            docker stop ${{ env.CONTAINER_NAME }};
            docker rm ${{ env.CONTAINER_NAME }};
            docker pull ${{ vars.DOCKER_TAG }};
            docker-compose up -d
